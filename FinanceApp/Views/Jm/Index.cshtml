@model IEnumerable<FinanceApp.Models.dbJm>
@{
    ViewData["Title"] = "Data Jurnal Memorial";
    var datefromstr = ViewData["datefromstr"];
    var datetostr = ViewData["datetostr"];

    var isAdmin = User.IsInRole("SuperAdmin").ToString();
}

<style>
    #myPopup {
        display: none;
        position: absolute;
        top: 50px;
        right: 50%;
        background-color: blue;
        height: 100px;
        width: 100px;
    }

    #myExit {
        position: absolute;
        right: 0px;
        text-align: right;
        color: white;
        background-color: red;

    }
    .btn-primary2 {
        color: #ffffff;
        background-color: #000000;
        border-color: #000000 !important
    }
    .btn-primary2:hover {
        color: #fff;
        background-color: #be0000;
        border-color: #be0000 !important
    }


</style>
<h1>Data Jurnal Memorial</h1>
<br />
<div class="container" id="bootstrap-overrides">
    <div class="row">
        <div class="col-sm align-self-end">
            <a asp-action="Create" class="btn btn-dark">Input Data Baru</a>
        </div>
        <div class="col-sm">
            <label><b>Pilih Tanggal Transaksi: </b></label>
            <br />
            <table
                ><tr>
                    <td>
                        <label>dari: </label>
                        <br />
                        <input type="date" id="datefrom" class="form-control" />

                    </td>
                    <td>
                        <label>ke: </label>
                        <br />
                        <input type="date" id="dateto" class="form-control" />

                    </td>
                  </tr>
             </table>
            <br />
            <br />
            <input type="button" value="Cari Data" onclick="PopulateTable()" class="btn btn-dark" />
            <input type="button" value="Reset" onclick="Clear()" class="btn btn-dark" />
        </div>

    </div>
</div>
<br />
<table class="table table-striped" id="IndexTbl">
    <thead>
        <tr>
            <th>id.</th>
            <th>
                TransDate
            </th>
            <th>
                Description
            </th>
            <th>
                Trans no
            </th>

            <th>
                Akun Debit
            </th>
            <th>
                Akun Kredit
            </th>
            <th>
                Debit
            </th>
            <th>
                Kredit

            </th>
            <th>
                <label>Actions</label>
            </th>
        </tr>
    </thead>
    <tbody id="tbodyid">
        @{
            var i = 1;
        }
        @foreach (var dt in Model)
        {
            <tr>
                <td>
                    @i
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dt.TransDateStr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dt.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dt.Trans_no)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dt.Akun_Debit)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => dt.Akun_Credit)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => dt.DebitStr)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => dt.CreditStr)

                </td>
            
                <td>
                   
                </td>
            </tr>
            i++;
        }
    </tbody>
</table>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var tables;
        $(document).ready(function () {
            tables = $('#IndexTbl').DataTable({
                "sPaginationType": "full_numbers",
                "bJQueryUI": true,
                "bProcessing": true,
                "aLengthMenu": [[10, 50, 100, 200, -1], ["10", "50", "100", "200", "All"]],
                "stateSave": true,
                "oSelectorOpts": { filter: 'applied' },
                dom: "<'row'<'col-sm-12'B>>" +
                    "<'row'<'col-sm-6'l><'col-sm-6'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: 'Export to Excel',
                        title: 'dataJM',
                        exportOptions: {
                            columns: ':visible'
                            //,modifier: {
                            //    page: 'current'
                            //}
                        }
                    }
                ],
                "columnDefs": [{
                    "className": "dt-center",
                    "targets": [0, 1]
                }],
            });
            var stringdatevaluefrom = '@datefromstr'
            if(stringdatevaluefrom != ""){
                $("#datefrom").val(stringdatevaluefrom);
            }
            var stringdatevalueto = '@datetostr'
            if (stringdatevalueto != "") {
                $("#dateto").val(stringdatevalueto);
            }

        });

        function PopulateTable() {
            // $("#tbodyid").empty();
            tables.clear().draw();
            var valuefrom = $("#datefrom").val();
            var valueto = $("#dateto").val();
            if (valuefrom != null && valuefrom != "" && valueto != null && valueto != "") {
                let fromDate = $("#datefrom").val();
                let toDate = $("#dateto").val();
                if (new Date(fromDate) > new Date(toDate)) {
                    alert("Error: The 'From' date cannot be later than the 'To' date.");
                }else{
                    $.ajax({
                        url: '@Url.Action("getTbl", "Jm")',
                        type: "GET",
                        data: { from: valuefrom, to: valueto },
                        //startDate: mFromDate, endDate: mToDate1
                        dataType: 'json',
                        success: function (data) {
                            var tr;
                            //Append each row to html table
                            for (var i = 0; i < data.length; i++) {
                                debugger;
                                console.log(data[i]);
                                var number = parseInt(i) + 1;
                                tr = $('<tr/>');
                                tr.append("<td>" + number + "</td>");
                                tr.append("<td>" + data[i].transDateStr + "</td>");
                                tr.append("<td>" + data[i].description + "</td>");
                                tr.append("<td>" + data[i].trans_no + "</td>");
                                tr.append("<td>" + data[i].akun_Debit + "</td>");
                                tr.append("<td>" + data[i].akun_Credit + "</td>");
                                tr.append("<td>" + data[i].debitStr + "</td>");
                                tr.append("<td>" + data[i].creditStr + "</td>");

                                //tr.append("<td>" + data[i].vaksiN2 + "</td>");
                                var isAdmin = '@isAdmin';
                                debugger;
                                if (isAdmin == "True") {
                                    tr.append("<td></td>");

                                    // tr.append('<td><a href="/Jm/Edit/' + data[i].id + '" class="btn btn-sm btn-dark">Edit</a >&nbsp;<a href="/Jm/Delete/' + data[i].id + '" class="btn btn-sm btn-dark">Delete</a ></td>');
                                }
                                else {
                                    tr.append("<td></td>");
                                    // tr.append('<td><a href="/Jm/Edit/' + data[i].id + '" class="btn btn-sm btn-dark">Edit</a >');

                                }
                                //tr.append('<button type="button" asp-action="Edit" asp-route-id="' + data[i].id + '" class="btn btn-primary";">Delete</button>');
                                //tr.append("")
                                //tr.append("<a asp-action='Edit' asp-route-id='" + data[i].id + "' class='btn btn - primary'>Edit</a>");
                                //tr.append("<a asp-action='Delete' asp-route-id='" + data[i].id + "' class='btn btn - primary'>Delete</a>");
                                //tr.append("");

                                // $('#IndexTbl').append(tr);
                                tables.row.add(tr).draw(); // This ensures the row is added to DataTable

                                /* location.reload();*/
                            }
                        },
                        error: function () {

                        }

                    });
                }
                
            } else {
                alert('Please fill date range Code');
            }

        }
        function Clear() {
            $("#datefrom").val(null);
            $("#dateto").val(null);
            tables.clear().draw();
            $.ajax({
                url: '@Url.Action("getTblEmpty", "Jm")',
                    type: "GET",
                    //startDate: mFromDate, endDate: mToDate1
                    dataType: 'json',
                    success: function (data) {

                    },
                    error: function () {

                    }

                });

        }
    </script>
}

